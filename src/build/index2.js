"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
const index2_1 = require("@angular-devkit/architect/src/index2");
const path_1 = require("path");
const rxjs_1 = require("rxjs");
const operators_1 = require("rxjs/operators");
async function initialize(options, root) {
    const packager = (await Promise.resolve().then(() => require('ng-packagr'))).ngPackagr();
    packager.forProject(path_1.resolve(root, options.project));
    if (options.tsConfig) {
        packager.withTsConfig(path_1.resolve(root, options.tsConfig));
    }
    return packager;
}
function buildLibrary(options, context) {
    return rxjs_1.from(initialize(options, context.workspaceRoot)).pipe(operators_1.switchMap(packager => options.watch ? packager.watch() : packager.build()), operators_1.mapTo({ success: true }), operators_1.catchError(error => {
        context.reportStatus('Error: ' + error);
        return [{ success: false }];
    }));
}
exports.buildLibrary = buildLibrary;
exports.default = index2_1.createBuilder(buildLibrary);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgyLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9hbmd1bGFyX2RldmtpdC9idWlsZF9uZ19wYWNrYWdyL3NyYy9idWlsZC9pbmRleDIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0dBTUc7QUFDSCxpRUFBb0c7QUFDcEcsK0JBQStCO0FBQy9CLCtCQUF3QztBQUN4Qyw4Q0FBOEQ7QUFHOUQsS0FBSyxVQUFVLFVBQVUsQ0FDdkIsT0FBZ0MsRUFDaEMsSUFBWTtJQUVaLE1BQU0sUUFBUSxHQUFHLENBQUMsMkNBQWEsWUFBWSxFQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUUxRCxRQUFRLENBQUMsVUFBVSxDQUFDLGNBQU8sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFFcEQsSUFBSSxPQUFPLENBQUMsUUFBUSxFQUFFO1FBQ3BCLFFBQVEsQ0FBQyxZQUFZLENBQUMsY0FBTyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztLQUN4RDtJQUVELE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUM7QUFFRCxTQUFnQixZQUFZLENBQzFCLE9BQWdDLEVBQ2hDLE9BQXVCO0lBRXZCLE9BQU8sV0FBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMxRCxxQkFBUyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUMsRUFDMUUsaUJBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUN4QixzQkFBVSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ2pCLE9BQU8sQ0FBQyxZQUFZLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxDQUFDO1FBRXhDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQzlCLENBQUMsQ0FBQyxDQUNILENBQUM7QUFDSixDQUFDO0FBYkQsb0NBYUM7QUFFRCxrQkFBZSxzQkFBYSxDQUFtRCxZQUFZLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCB7IEJ1aWxkZXJDb250ZXh0LCBCdWlsZGVyT3V0cHV0LCBjcmVhdGVCdWlsZGVyIH0gZnJvbSAnQGFuZ3VsYXItZGV2a2l0L2FyY2hpdGVjdC9zcmMvaW5kZXgyJztcbmltcG9ydCB7IHJlc29sdmUgfSBmcm9tICdwYXRoJztcbmltcG9ydCB7IE9ic2VydmFibGUsIGZyb20gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGNhdGNoRXJyb3IsIG1hcFRvLCBzd2l0Y2hNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBTY2hlbWEgYXMgTmdQYWNrYWdyQnVpbGRlck9wdGlvbnMgfSBmcm9tICcuL3NjaGVtYSc7XG5cbmFzeW5jIGZ1bmN0aW9uIGluaXRpYWxpemUoXG4gIG9wdGlvbnM6IE5nUGFja2FnckJ1aWxkZXJPcHRpb25zLFxuICByb290OiBzdHJpbmcsXG4pOiBQcm9taXNlPGltcG9ydCAoJ25nLXBhY2thZ3InKS5OZ1BhY2thZ3I+IHtcbiAgY29uc3QgcGFja2FnZXIgPSAoYXdhaXQgaW1wb3J0KCduZy1wYWNrYWdyJykpLm5nUGFja2FncigpO1xuXG4gIHBhY2thZ2VyLmZvclByb2plY3QocmVzb2x2ZShyb290LCBvcHRpb25zLnByb2plY3QpKTtcblxuICBpZiAob3B0aW9ucy50c0NvbmZpZykge1xuICAgIHBhY2thZ2VyLndpdGhUc0NvbmZpZyhyZXNvbHZlKHJvb3QsIG9wdGlvbnMudHNDb25maWcpKTtcbiAgfVxuXG4gIHJldHVybiBwYWNrYWdlcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkTGlicmFyeShcbiAgb3B0aW9uczogTmdQYWNrYWdyQnVpbGRlck9wdGlvbnMsXG4gIGNvbnRleHQ6IEJ1aWxkZXJDb250ZXh0LFxuKTogT2JzZXJ2YWJsZTxCdWlsZGVyT3V0cHV0PiB7XG4gIHJldHVybiBmcm9tKGluaXRpYWxpemUob3B0aW9ucywgY29udGV4dC53b3Jrc3BhY2VSb290KSkucGlwZShcbiAgICBzd2l0Y2hNYXAocGFja2FnZXIgPT4gb3B0aW9ucy53YXRjaCA/IHBhY2thZ2VyLndhdGNoKCkgOiBwYWNrYWdlci5idWlsZCgpKSxcbiAgICBtYXBUbyh7IHN1Y2Nlc3M6IHRydWUgfSksXG4gICAgY2F0Y2hFcnJvcihlcnJvciA9PiB7XG4gICAgICBjb250ZXh0LnJlcG9ydFN0YXR1cygnRXJyb3I6ICcgKyBlcnJvcik7XG5cbiAgICAgIHJldHVybiBbeyBzdWNjZXNzOiBmYWxzZSB9XTtcbiAgICB9KSxcbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQnVpbGRlcjxSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ICYgTmdQYWNrYWdyQnVpbGRlck9wdGlvbnM+KGJ1aWxkTGlicmFyeSk7XG4iXX0=